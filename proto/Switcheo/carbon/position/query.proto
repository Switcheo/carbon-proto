syntax = "proto3";
package Switcheo.carbon.position;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

import "Switcheo/carbon/position/position.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/Switcheo/carbon/x/position/types";
option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service Query {
  // this line is used by starport scaffolding # 2
  rpc Position(QueryGetPositionRequest) returns (QueryGetPositionResponse) {
    option (google.api.http).get =
        "/carbon/position/v1/positions/{address}/{market_id}";
  }
  rpc PositionAll(QueryAllPositionRequest) returns (QueryAllPositionResponse) {
    option (google.api.http).get = "/carbon/position/v1/positions";
  }
  rpc PositionAllocatedMargin(QueryPositionAllocatedMarginRequest)
      returns (QueryPositionAllocatedMarginResponse) {
    option (google.api.http).get =
        "/carbon/position/v1/position_allocated_margin/{end_block_height}";
  }
  rpc OpenInterest(QueryGetOpenInterestRequest)
      returns (QueryGetOpenInterestResponse) {
    option (google.api.http).get =
        "/carbon/position/v1/open_interest/{market_id}";
  }
  rpc OpenInterestAll(QueryAllOpenInterestsRequest)
      returns (QueryAllOpenInterestsResponse) {
    option (google.api.http).get = "/carbon/position/v1/open_interests";
  }
}

message QueryGetPositionRequest {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string market_id = 2;
}

message QueryGetPositionResponse {
  Position position = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllPositionRequest {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string market_id = 2;
  string status = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryAllPositionResponse {
  repeated APIPosition positions = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryPositionAllocatedMarginRequest { string end_block_height = 1; }

message QueryPositionAllocatedMarginResponse {
  repeated position.PositionAllocatedMargin positions = 1
      [ (gogoproto.nullable) = false ];
}

message QueryGetOpenInterestRequest { string market_id = 1; }

message QueryGetOpenInterestResponse {
  OpenInterest open_interest = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllOpenInterestsRequest {}

message QueryAllOpenInterestsResponse {
  repeated OpenInterest open_interests = 1 [ (gogoproto.nullable) = false ];
}