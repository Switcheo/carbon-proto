syntax = "proto3";
package Switcheo.carbon.evmcontract;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "Switcheo/carbon/evmcontract/evm_hooks.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/Switcheo/carbon/x/evmcontract/types";
option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service Query {
  // this line is used by starport scaffolding # 2

  // Get contract version and isActive from contract address
  rpc Contract(QueryContractRequest) returns (QueryContractResponse) {
    option (google.api.http).get =
        "/carbon/evmcontract/v1/contracts/{module_name}/{contract_address}";
  }
  // Get contract version and isActive all deployed contracts in a module
  rpc ContractAllByModule(QueryContractAllByModuleRequest)
      returns (QueryContractAllByModuleResponse) {
    option (google.api.http).get =
        "/carbon/evmcontract/v1/contracts/{module_name}";
  }

  // Get version and isActive from all deployed contracts
  rpc ContractAll(QueryContractAllRequest) returns (QueryContractAllResponse) {
    option (google.api.http).get = "/carbon/evmcontract/v1/contracts";
  }

  // Get the module's evm address
  rpc ModuleEVMAddress(QueryAddressEVMRequest)
      returns (QueryAddressEVMResponse) {
    option (google.api.http).get = "/carbon/evmcontract/v1/module/{name}";
  }

  // Get evm addresses of all modules with EVM
  rpc AllModuleEVMAddress(QueryAllAddressEVMRequest)
      returns (QueryAllAddressEVMResponse) {
    option (google.api.http).get = "/carbon/evmcontract/v1/modules";
  }
}

// this line is used by starport scaffolding # 3
message QueryContractRequest {
  string module_name = 1;
  string contract_address = 2;
}

message QueryContractResponse {
  EVMContract contract = 1 [ (gogoproto.nullable) = false ];
}

message QueryContractAllByModuleRequest { string module_name = 1; }

message QueryContractAllByModuleResponse {
  repeated EVMContract contracts = 1 [ (gogoproto.nullable) = false ];
}

message QueryContractAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryContractAllResponse {
  repeated EVMContract contracts = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllAddressEVMRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAddressEVMResponse {
  repeated ModuleEVMAddress modules = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAddressEVMRequest { string name = 1; }

message QueryAddressEVMResponse { string address = 1; }