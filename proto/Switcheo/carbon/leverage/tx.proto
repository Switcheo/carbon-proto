syntax = "proto3";
package Switcheo.carbon.leverage;

import "gogoproto/gogo.proto";
import "Switcheo/carbon/leverage/leverage.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/Switcheo/carbon/x/leverage/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc SetLeverage(MsgSetLeverage) returns (MsgSetLeverageResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgSetLeverage {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "leverage/SetLeverage";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string market_id = 2;
  string leverage = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message MsgSetLeverageResponse {}
