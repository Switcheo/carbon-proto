syntax = "proto3";
package Switcheo.carbon.order;

option go_package = "github.com/Switcheo/carbon/x/order/types";
option (gogoproto.goproto_getters_all) = false;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

message Order {
  string id = 1 [ (gogoproto.moretags) = "db:\"id\"" ];
  int64 block_height = 2 [ (gogoproto.moretags) = "db:\"block_height\"" ];
  google.protobuf.Timestamp block_created_at = 3 [
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "db:\"block_created_at\"",
    (gogoproto.nullable) = false
  ];
  int64 triggered_block_height = 4
      [ (gogoproto.moretags) = "db:\"triggered_block_height\"" ];
  string address = 5 [
    (gogoproto.moretags) = "db:\"address\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  string market_id = 6 [ (gogoproto.moretags) = "db:\"market\"" ];
  string side = 7 [ (gogoproto.moretags) = "db:\"side\"" ];
  string price = 8 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "db:\"price\"",
    (gogoproto.nullable) = false
  ];
  string quantity = 9 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "db:\"quantity\"",
    (gogoproto.nullable) = false
  ];
  string available = 10 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "db:\"available\"",
    (gogoproto.nullable) = false
  ];
  string filled = 11 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "db:\"filled\"",
    (gogoproto.nullable) = false
  ];
  string status = 12 [ (gogoproto.moretags) = "db:\"status\"" ];
  string order_type = 13 [
    (gogoproto.customtype) =
        "github.com/Switcheo/carbon/x/order/exported/types.OrderType",
    (gogoproto.moretags) = "db:\"order_type\"",
    (gogoproto.nullable) = false
  ];
  string initiator = 14 [ (gogoproto.moretags) = "db:\"initiator\"" ];
  string time_in_force = 15 [ (gogoproto.moretags) = "db:\"time_in_force\"" ];
  string stop_price = 16 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "db:\"stop_price\"",
    (gogoproto.nullable) = false
  ];
  string trigger_type = 17 [ (gogoproto.moretags) = "db:\"trigger_type\"" ];
  cosmos.base.v1beta1.Coin allocated_margin = 18
      [ (gogoproto.nullable) = false ];
  bool is_liquidation = 19 [ (gogoproto.moretags) = "db:\"is_liquidation\"" ];
  bool is_post_only = 20 [ (gogoproto.moretags) = "db:\"is_post_only\"" ];
  bool is_reduce_only = 21 [ (gogoproto.moretags) = "db:\"is_reduce_only\"" ];
  uint64 pool_id = 22 [ (gogoproto.moretags) = "db:\"pool_id\"" ];
  string avg_filled_price = 23 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "db:\"avg_filled_price\"",
    (gogoproto.nullable) = false
  ];
  string referral_address = 24 [
    (gogoproto.moretags) = "db:\"referral_address\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  uint32 referral_commission = 25
      [ (gogoproto.moretags) = "db:\"referral_commission\"" ];
  uint32 referral_kickback = 26
      [ (gogoproto.moretags) = "db:\"referral_kickback\"" ];
  bytes pool_route = 27;
  google.protobuf.UInt32Value cancel_reason = 28 [
    (gogoproto.moretags) = "db:\"cancel_reason\"",
    (gogoproto.wktpointer) = true
  ];
  int64 inserted_block_height = 29
      [ (gogoproto.moretags) = "db:\"inserted_block_height\"" ];
}

message DBOrder {
  Order order = 1 [ (gogoproto.embed) = true, (gogoproto.jsontag) = "" ];
  string allocated_margin_denom = 2
      [ (gogoproto.moretags) = "db:\"allocated_margin_denom\"" ];
  string allocated_margin_amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "db:\"allocated_margin_amount\"",
    (gogoproto.nullable) = false
  ];
  string username = 4;
  int64 last_updated_block_height = 5
      [ (gogoproto.moretags) = "db:\"last_updated_block_height\"" ];
}

message OrdersForMarket {
  string market_id = 1;
  repeated Order orders = 2 [ (gogoproto.nullable) = false ];
}

message OrderIdsForMarket {
  string market_id = 1;
  repeated string order_ids = 2;
}

message OrderIds { repeated string ids = 1; }

message Orders { repeated Order orders = 1 [ (gogoproto.nullable) = false ]; }
