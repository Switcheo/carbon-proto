syntax = "proto3";
package Switcheo.carbon.cdp;

import "gogoproto/gogo.proto";
import "Switcheo/carbon/cdp/rate_strategy_params.proto";
import "Switcheo/carbon/cdp/e_mode_category.proto";
import "Switcheo/carbon/cdp/asset_params.proto";
import "Switcheo/carbon/cdp/reward_scheme.proto";
import "Switcheo/carbon/cdp/params.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/Switcheo/carbon/x/cdp/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc AddRateStrategy(MsgAddRateStrategy) returns (MsgAddRateStrategyResponse);
  rpc RemoveRateStrategy(MsgRemoveRateStrategy)
      returns (MsgRemoveRateStrategyResponse);
  rpc AddAsset(MsgAddAsset) returns (MsgAddAssetResponse);
  rpc UpdateRateStrategy(MsgUpdateRateStrategy)
      returns (MsgUpdateRateStrategyResponse);
  rpc UpdateAsset(MsgUpdateAsset) returns (MsgUpdateAssetResponse);
  rpc SupplyAsset(MsgSupplyAsset) returns (MsgSupplyAssetResponse);
  rpc WithdrawAsset(MsgWithdrawAsset) returns (MsgWithdrawAssetResponse);
  rpc LockCollateral(MsgLockCollateral) returns (MsgLockCollateralResponse);
  rpc UnlockCollateral(MsgUnlockCollateral)
      returns (MsgUnlockCollateralResponse);
  rpc BorrowAsset(MsgBorrowAsset) returns (MsgBorrowAssetResponse);
  rpc RepayAsset(MsgRepayAsset) returns (MsgRepayAssetResponse);
  rpc SupplyAssetAndLockCollateral(MsgSupplyAssetAndLockCollateral)
      returns (MsgSupplyAssetAndLockCollateralResponse);
  rpc UnlockCollateralAndWithdrawAsset(MsgUnlockCollateralAndWithdrawAsset)
      returns (MsgUnlockCollateralAndWithdrawAssetResponse);
  rpc LiquidateCollateral(MsgLiquidateCollateral)
      returns (MsgLiquidateCollateralResponse);
  rpc SetLiquidationFee(MsgSetLiquidationFee)
      returns (MsgSetLiquidationFeeResponse);
  rpc SetInterestFee(MsgSetInterestFee) returns (MsgSetInterestFeeResponse);
  rpc CreateRewardScheme(MsgCreateRewardScheme)
      returns (MsgCreateRewardSchemeResponse);
  rpc UpdateRewardScheme(MsgUpdateRewardScheme)
      returns (MsgUpdateRewardSchemeResponse);
  rpc ClaimRewards(MsgClaimRewards) returns (MsgClaimRewardsResponse);
  rpc SetStablecoinInterestRate(MsgSetStablecoinInterestRate)
      returns (MsgSetStablecoinInterestRateResponse);
  rpc SetStablecoinMintCap(MsgSetStablecoinMintCap)
      returns (MsgSetStablecoinMintCapResponse);
  rpc MintStablecoin(MsgMintStablecoin) returns (MsgMintStablecoinResponse);
  rpc ReturnStablecoin(MsgReturnStablecoin)
      returns (MsgReturnStablecoinResponse);
  rpc SetCompleteLiquidationThreshold(MsgSetCompleteLiquidationThreshold)
      returns (MsgSetCompleteLiquidationThresholdResponse);
  rpc SetMinimumCloseFactor(MsgSetMinimumCloseFactor)
      returns (MsgSetMinimumCloseFactorResponse);
  rpc SetSmallLiquidationSize(MsgSetSmallLiquidationSize)
      returns (MsgSetSmallLiquidationSizeResponse);
  rpc SetStalePriceGracePeriod(MsgSetStalePriceGracePeriod)
      returns (MsgSetStalePriceGracePeriodResponse);
  rpc SetCdpPaused(MsgSetCdpPaused) returns (MsgSetCdpPausedResponse);
  rpc ConvertTokenInCdpToGroupTokens(MsgConvertTokenInCdpToGroupTokens)
      returns (MsgConvertTokenInCdpToGroupTokensResponse);
  rpc AddEModeCategory(MsgAddEModeCategory)
      returns (MsgAddEModeCategoryResponse);
  rpc UpdateEModeCategory(MsgUpdateEModeCategory)
      returns (MsgUpdateEModeCategoryResponse);
  rpc SetAccountEMode(MsgSetAccountEMode) returns (MsgSetAccountEModeResponse);
  rpc RemoveAccountEMode(MsgRemoveAccountEMode)
      returns (MsgRemoveAccountEModeResponse);
  // UpdateParams defines a governance operation for updating the module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgAddRateStrategy {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/AddRateStrategy";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  RateStrategyParams rate_strategy_params = 2 [ (gogoproto.nullable) = false ];
}

message MsgAddRateStrategyResponse {
  RateStrategyParams rate_strategy_params = 1 [ (gogoproto.nullable) = false ];
}

message MsgUpdateRateStrategy {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/UpdateRateStrategy";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  RateStrategyParams rate_strategy_params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateRateStrategyResponse {
  RateStrategyParams rate_strategy_params = 1 [ (gogoproto.nullable) = false ];
}

message MsgRemoveRateStrategy {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/RemoveRateStrategy";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string name = 2;
}

message MsgRemoveRateStrategyResponse { string name = 1; }

message MsgAddAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/AddAsset";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  AssetParams asset_params = 2 [ (gogoproto.nullable) = false ];
}

message MsgAddAssetResponse {
  AssetParams asset_params = 1 [ (gogoproto.nullable) = false ];
}

message MsgUpdateAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/UpdateAsset";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  UpdateAssetParams asset_params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateAssetResponse {
  AssetParams asset_params = 1 [ (gogoproto.nullable) = false ];
}

message MsgSupplyAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SupplyAsset";

  string creator = 1 [
    (gogoproto.moretags) = "db:\"creator\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  string denom = 2 [ (gogoproto.moretags) = "db:\"denom\"" ];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "db:\"amount\""
  ];
}

message MsgSupplyAssetResponse {}

message MsgWithdrawAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/WithdrawAsset";

  string creator = 1;
  string cibt_denom = 2;
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgWithdrawAssetResponse {}

message MsgLockCollateral {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/LockCollateral";

  string creator = 1 [ (gogoproto.moretags) = "db:\"creator\"" ];
  string cibt_denom = 2 [ (gogoproto.moretags) = "db:\"denom\"" ];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "db:\"amount\""
  ];
}

message MsgLockCollateralResponse {}

message MsgUnlockCollateral {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/UnlockCollateral";

  string creator = 1 [ (gogoproto.moretags) = "db:\"creator\"" ];
  string cibt_denom = 2 [ (gogoproto.moretags) = "db:\"denom\"" ];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "db:\"amount\""
  ];
}

message MsgUnlockCollateralResponse {}

message MsgBorrowAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/BorrowAsset";

  string creator = 1 [
    (gogoproto.moretags) = "db:\"creator\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  string denom = 2 [ (gogoproto.moretags) = "db:\"denom\"" ];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "db:\"amount\""
  ];
}

message MsgBorrowAssetResponse {}

message MsgRepayAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/RepayAsset";

  string creator = 1 [
    (gogoproto.moretags) = "db:\"creator\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  string denom = 2 [ (gogoproto.moretags) = "db:\"denom\"" ];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "db:\"amount\""
  ];
  string debtor = 4 [ (gogoproto.moretags) = "db:\"debtor\"" ];
  bool from_collateral = 5 [ (gogoproto.moretags) = "db:\"from_collateral\"" ];
}

message MsgRepayAssetResponse {}

message MsgSupplyAssetAndLockCollateral {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SupplyAssetAndLockCollateral";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string denom = 2;
  string supply_amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string lock_amount = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSupplyAssetAndLockCollateralResponse {}

message MsgUnlockCollateralAndWithdrawAsset {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/UnlockCollateralAndWithdrawAsset";

  string creator = 1;
  string cibt_denom = 2;
  string unlock_amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string withdraw_amount = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgUnlockCollateralAndWithdrawAssetResponse {}

message MsgLiquidateCollateral {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/LiquidateCollateral";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string debtor = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  cosmos.base.v1beta1.Coin min_collateral = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  cosmos.base.v1beta1.Coin debt = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  cosmos.base.v1beta1.Coin stable_interest = 5
      [ (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
  bool debt_from_collateral = 6;
  bool interest_from_collateral = 7;
}

message MsgLiquidateCollateralResponse {}

message MsgSetLiquidationFee {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetLiquidationFee";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string liquidation_fee = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSetLiquidationFeeResponse {}

message MsgSetInterestFee {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetInterestFee";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string interest_fee = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSetInterestFeeResponse {}

message MsgSetStablecoinMintCap {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetStablecoinMintCap";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string stablecoin_mint_cap = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSetStablecoinMintCapResponse {}

message MsgSetStablecoinInterestRate {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetStablecoinInterestRate";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string stablecoin_interest_rate = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSetStablecoinInterestRateResponse {}

message MsgMintStablecoin {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/MintStablecoin";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string amount = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "db:\"amount\""
  ];
}

message MsgMintStablecoinResponse {}

message MsgReturnStablecoin {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/ReturnStablecoin";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  cosmos.base.v1beta1.Coin principal = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  cosmos.base.v1beta1.Coin interest = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  string debtor = 4;
  bool principal_from_collateral = 5
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  bool interest_from_collateral = 6;
}

message MsgReturnStablecoinResponse {}

message MsgSetCompleteLiquidationThreshold {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetCompleteLiquidationThreshold";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string complete_liquidation_threshold = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message MsgSetCompleteLiquidationThresholdResponse {}

message MsgSetMinimumCloseFactor {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetMinimumCloseFactor";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string minimum_close_factor = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message MsgSetMinimumCloseFactorResponse {}

message MsgSetSmallLiquidationSize {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetSmallLiquidationSize";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string small_liquidation_size = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message MsgSetSmallLiquidationSizeResponse {}

message MsgCreateRewardScheme {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/CreateRewardScheme";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  CreateRewardSchemeParams create_reward_scheme_params = 2
      [ (gogoproto.nullable) = false ];
}

message MsgCreateRewardSchemeResponse {}

message MsgUpdateRewardScheme {
  option (cosmos.msg.v1.signer) = "updater";
  option (amino.name) = "cdp/UpdateRewardScheme";

  string updater = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  UpdateRewardSchemeParams update_reward_scheme_params = 2
      [ (gogoproto.nullable) = false ];
}

message MsgUpdateRewardSchemeResponse {}

message MsgClaimRewards {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/ClaimRewards";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgClaimRewardsResponse {}

message MsgSetStalePriceGracePeriod {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetStalePriceGracePeriod";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  google.protobuf.Duration stale_price_grace_period = 2
      [ (gogoproto.stdduration) = true, (gogoproto.nullable) = false ];
}

message MsgSetStalePriceGracePeriodResponse {}

message MsgSetCdpPaused {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetCdpPaused";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  bool cdpPaused = 2;
}

message MsgSetCdpPausedResponse {}

message MsgConvertTokenInCdpToGroupTokens {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/ConvertTokenInCdpToGroupTokens";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string denom = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgConvertTokenInCdpToGroupTokensResponse {}

message MsgAddEModeCategory {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/AddEModeCategory";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  EModeCategory e_mode_category = 2 [ (gogoproto.nullable) = false ];
}

message MsgAddEModeCategoryResponse {}

message MsgUpdateEModeCategory {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/UpdateEModeCategory";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string e_mode_category_name = 2;
  UpdateEModeCategoryParams update_e_mode_category_params = 3
      [ (gogoproto.nullable) = false ];
  ;
}

message UpdateEModeCategoryParams {
  repeated google.protobuf.StringValue denoms = 1
      [ (gogoproto.wktpointer) = true ];
  google.protobuf.Int64Value loan_to_value = 2
      [ (gogoproto.wktpointer) = true ];
  google.protobuf.Int64Value liquidation_threshold = 3
      [ (gogoproto.wktpointer) = true ];
  google.protobuf.Int64Value liquidation_discount = 4
      [ (gogoproto.wktpointer) = true ];
  google.protobuf.BoolValue is_active = 6 [
    (gogoproto.moretags) = "db:\"is_active\"",
    (gogoproto.wktpointer) = true
  ];
}

message MsgUpdateEModeCategoryResponse {}

message MsgSetAccountEMode {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/SetAccountEMode";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string e_mode_category_name = 2;
}

message MsgSetAccountEModeResponse {}

message MsgRemoveAccountEMode {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "cdp/RemoveAccountEMode";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgRemoveAccountEModeResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "cdp/MsgUpdateParams";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the optional parameters to update.
  ParamsToUpdate params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

// this line is used by starport scaffolding # proto/tx/message
